{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters": {
        "SourceS3Bucket": {
            "Description": "S3 bucket name used to bootstrap destination S3 and DDB resources",
            "Type": "String",
            "Default": "ws-lambda-at-edge"
        }
    },
    "Resources": {
        "IamLambdaExecutionRoleBasic": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Join": [ "-", [
                    "ws-lambda-at-edge-basic",
                    { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                      "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                      "Ref":  "AWS::StackId" } ] } ]
                    } ] } ] }
                ] ] },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "Path": "/",                
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com",
                                "edgelambda.amazonaws.com"
                            ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                }
            }
        },
        "IamLambdaExecutionRoleReadOnly": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Join": [ "-", [
                    "ws-lambda-at-edge-read-only",
                    { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                      "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                      "Ref":  "AWS::StackId" } ] } ]
                    } ] } ] }
                ] ] },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonDynamoDBReadOnlyAccess",
                    "arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess",
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "Path": "/",                
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com",
                                "edgelambda.amazonaws.com"
                            ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                }
            }
        },
        "IamLambdaExecutionRoleFullAccess": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": { "Fn::Join": [ "-", [
                    "ws-lambda-at-edge-full-access",
                    { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                      "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                      "Ref":  "AWS::StackId" } ] } ]
                    } ] } ] }
                ] ] },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess",
                    "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
                ],
                "Path": "/",                
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [
                                "lambda.amazonaws.com",
                                "edgelambda.amazonaws.com"
                            ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                }
            }
        },
        "S3BucketUS": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "BucketName": { "Fn::Join": [ "-", [
                    "ws-lambda-at-edge",
                    { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                      "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                      "Ref":  "AWS::StackId" } ] } ]
                    } ] } ] }
                ] ] },
                "AccessControl": "PublicRead",
                "WebsiteConfiguration": {
                    "IndexDocument": "index.html"
                }
            }
        },
        "S3BucketUSPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
                "Bucket": { "Ref": "S3BucketUS" },
                "PolicyDocument": {
                    "Statement": [{
	                "Action": [ "s3:GetObject" ],
	                "Effect": "Allow",
	                "Principal": "*",
	                "Resource": { "Fn::Join": [ "",
                            [ "arn:aws:s3:::", { "Ref": "S3BucketUS" }, "/*" ]
                        ]}
                    }]
                }
            }
        },
        "DdbCardsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": { "Fn::Join": [ "-", [
                    "AlienCards",
                    { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                      "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                      "Ref":  "AWS::StackId" } ] } ]
                    } ] } ] }
                ] ] },
                "KeySchema": [ {
                    "AttributeName": "CardId",
                    "KeyType": "HASH"
                } ],
                "AttributeDefinitions": [ {
                    "AttributeName": "CardId",
                    "AttributeType": "S"   
                } ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": "5",
                    "WriteCapacityUnits": "5"
                }
            }
        },
        "BootstrapFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
                "Handler": "cfn-custom-resource.handler",
                "Runtime": "nodejs6.10",
                "Timeout": 60,
                "Role": { "Fn::GetAtt": [ "IamLambdaExecutionRoleFullAccess", "Arn" ] },
                "Code": {
                  "S3Bucket" : { "Ref":  "SourceS3Bucket" },
                  "S3Key" : "bootstrap/cfn-custom-resource/lambda-package.zip"
                }
            }
        },
        "BootstrapCustomResource": {
            "Type": "Custom::BootstrapFunction",
            "DependsOn": [ "DdbCardsTable", "S3BucketUS" ],
            "Properties": {
                "ServiceToken": { "Fn::GetAtt": [ "BootstrapFunction" , "Arn" ] },
                "SrcS3Bucket": { "Ref":  "SourceS3Bucket" },
                "DstS3Bucket": { "Ref":  "S3BucketUS" },
                "DdbTableName": { "Ref":  "DdbCardsTable" }
            }
        },
        "CloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "DependsOn": [ "BootstrapCustomResource" ],
            "Properties": {
                "DistributionConfig": {
                    "Comment": { "Fn::Join": [ " ", [
                        "Lambda@Edge Workshop",
                        { "Fn::Select": [ 0 , { "Fn::Split": [ "-", {
                          "Fn::Select": [ 2 , { "Fn::Split": [ "/", {
                          "Ref":  "AWS::StackId" } ] } ]
                        } ] } ] }
                    ] ] },
                    "Origins": [ {
                        "OriginPath": "",
                        "CustomOriginConfig": {
                            "HTTPPort": 80,
                            "HTTPSPort": 443,
                            "OriginProtocolPolicy": "http-only",
                            "OriginKeepaliveTimeout": 5,
                            "OriginReadTimeout": 30
                        },
                        "Id": { "Fn::Join": [ "",
                            [ "S3-Website-", { "Ref": "S3BucketUS" }, ".s3-website-us-east-1.amazonaws.com" ]
                        ]},
                        "DomainName": { "Fn::Join": [ "",
                            [ { "Ref": "S3BucketUS" }, ".s3-website-us-east-1.amazonaws.com" ]
                        ]}
                    } ],
                    "DefaultRootObject": "index.html",
                    "DefaultCacheBehavior": {
                        "TargetOriginId": { "Fn::Join": [ "",
                            [ "S3-Website-", { "Ref": "S3BucketUS" }, ".s3-website-us-east-1.amazonaws.com" ]
                        ]},
                        "ViewerProtocolPolicy": "allow-all",
                        "ForwardedValues": {
                            "Headers": [],
                            "Cookies": { "Forward": "none" },
                            "QueryString": true,
                            "QueryStringCacheKeys": []
                        },
                        "MinTTL": 0,
                        "MaxTTL": 600,
                        "DefaultTTL": 60
                    },
                    "ViewerCertificate": {
                        "CloudFrontDefaultCertificate": true
                    },
                    "HttpVersion": "http2",
                    "PriceClass": "PriceClass_All",
                    "IPV6Enabled": true,
                    "Enabled": true,
                    "CustomErrorResponses": [
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 400 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 403 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 404 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 405 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 500 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 501 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 502 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 503 },
                        { "ErrorCachingMinTTL" : 5, "ErrorCode" : 504 }
                    ]
                }
            }
        }
    }
}
